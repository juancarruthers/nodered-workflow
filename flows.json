[
    {
        "id": "535e4b2995bd1b33",
        "type": "tab",
        "label": "Main Workflow CO2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f4eaed5e5b0f0b50",
        "type": "tab",
        "label": "JSON Serializer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a2ad6d19cb46f67",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "fddcbf09e9b6bc40",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d574b68d4530952b",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b62f3f727d91655d",
        "type": "ui_group",
        "name": "prueba",
        "tab": "fddcbf09e9b6bc40",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "127091be60fdfc3e",
        "type": "lorawan-keys",
        "name": "",
        "keys": "{\"id\":{\"nsw\":\"\",\"asw\":\"\"}}"
    },
    {
        "id": "9bed22448aae3360",
        "type": "mqtt-broker",
        "name": "TTN",
        "broker": "nam1.cloud.thethings.network",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "181746e1a8504a56",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "pi",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "pi",
        "userFieldType": "str",
        "password": "raspberry",
        "passwordFieldType": "str"
    },
    {
        "id": "20ae1e52d1eef983",
        "type": "postgreSQLConfig",
        "name": "myuser@timescale:5432/iot",
        "host": "timescale",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "iot",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "myuser",
        "userFieldType": "str",
        "password": "???",
        "passwordFieldType": "str"
    },
    {
        "id": "7cbb934b7e70ed98",
        "type": "ui_gauge",
        "z": "535e4b2995bd1b33",
        "name": "CO2 Gauge",
        "group": "b62f3f727d91655d",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "5000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "500",
        "seg2": "2000",
        "className": "",
        "x": 1090,
        "y": 40,
        "wires": []
    },
    {
        "id": "eb44a1563b772dab",
        "type": "mqtt in",
        "z": "535e4b2995bd1b33",
        "name": "TTN Connection",
        "topic": "v3/prueb2@ttn/devices/eui-a8610a32371c7808/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "9bed22448aae3360",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "681a9249d6e0b3a4",
        "type": "mqtt out",
        "z": "535e4b2995bd1b33",
        "name": "prueba",
        "topic": "prueba",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2a2ad6d19cb46f67",
        "x": 80,
        "y": 400,
        "wires": []
    },
    {
        "id": "0e8626cd13e282dd",
        "type": "lorawan-server",
        "z": "535e4b2995bd1b33",
        "name": "rpi",
        "port": "1700",
        "x": 330,
        "y": 560,
        "wires": [
            [
                "24c723b31f829060"
            ],
            []
        ]
    },
    {
        "id": "30cdb7dea4818fa2",
        "type": "inject",
        "z": "535e4b2995bd1b33",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "4622b9151676584c"
            ]
        ]
    },
    {
        "id": "4622b9151676584c",
        "type": "lorawan-packet-encoder",
        "z": "535e4b2995bd1b33",
        "name": "msg",
        "keys": "127091be60fdfc3e",
        "power": "14",
        "x": 190,
        "y": 540,
        "wires": [
            [
                "0e8626cd13e282dd"
            ],
            []
        ]
    },
    {
        "id": "24c723b31f829060",
        "type": "lorawan-packet-decoder",
        "z": "535e4b2995bd1b33",
        "name": "",
        "keys": "127091be60fdfc3e",
        "txdelay": "1012500",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "d3a0505dcce24b42"
            ],
            [],
            []
        ]
    },
    {
        "id": "d3a0505dcce24b42",
        "type": "lorawan-packet-checkFC",
        "z": "535e4b2995bd1b33",
        "name": "",
        "x": 680,
        "y": 560,
        "wires": [
            [
                "03e99e6736d5775b"
            ],
            [
                "8e0c9b9cc1fb5f29"
            ],
            [
                "6cb8e3ea2dbab1af"
            ]
        ]
    },
    {
        "id": "03e99e6736d5775b",
        "type": "link out",
        "z": "535e4b2995bd1b33",
        "name": "",
        "mode": "link",
        "links": [],
        "x": 925,
        "y": 520,
        "wires": []
    },
    {
        "id": "8e0c9b9cc1fb5f29",
        "type": "debug",
        "z": "535e4b2995bd1b33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 560,
        "wires": []
    },
    {
        "id": "6cb8e3ea2dbab1af",
        "type": "debug",
        "z": "535e4b2995bd1b33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 600,
        "wires": []
    },
    {
        "id": "7ea96d910b18bc8a",
        "type": "debug",
        "z": "535e4b2995bd1b33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 160,
        "wires": []
    },
    {
        "id": "a51b33186e4aea0d",
        "type": "debug",
        "z": "535e4b2995bd1b33",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 200,
        "wires": []
    },
    {
        "id": "3df3e042989a44d4",
        "type": "json",
        "z": "535e4b2995bd1b33",
        "name": "TTN JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "468c1bbae42d61bb",
                "e6c96e2c4cc1b946"
            ]
        ]
    },
    {
        "id": "468c1bbae42d61bb",
        "type": "change",
        "z": "535e4b2995bd1b33",
        "name": "Measure",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload.uplink_message.frm_payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 40,
        "wires": [
            [
                "27a5f301bcd5b9ea"
            ]
        ]
    },
    {
        "id": "0c5170e43636c216",
        "type": "function",
        "z": "535e4b2995bd1b33",
        "name": "Conversor Hexa",
        "func": "var str = msg.payload;\n\nmsg.payload.uplink_message.frm_payload = parseInt(msg.payload.uplink_message.frm_payload, 16);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "27a5f301bcd5b9ea",
        "type": "base64",
        "z": "535e4b2995bd1b33",
        "name": "Base64 To Buffer",
        "action": "",
        "property": "payload",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "f9b9ca1e6d16fa85"
            ]
        ]
    },
    {
        "id": "0623770f8930b7cd",
        "type": "debug",
        "z": "535e4b2995bd1b33",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2305,
        "y": 811,
        "wires": []
    },
    {
        "id": "f9b9ca1e6d16fa85",
        "type": "function",
        "z": "535e4b2995bd1b33",
        "name": "Buffer To Decimal",
        "func": "var buf = msg.payload;\nvar arrIn = buf.length - 1;\nvar value = 0\nvar exp = 0\nfor (var i= arrIn; i >= 0; i--){\n    inc = buf[i] * 2 ** exp\n    value = value + inc\n    exp = exp + 8\n}\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 80,
        "wires": [
            [
                "7cbb934b7e70ed98",
                "369edda658161204"
            ]
        ]
    },
    {
        "id": "852f8cc5a2901e7b",
        "type": "postgresql",
        "z": "535e4b2995bd1b33",
        "name": "Insert Scan",
        "query": "insert into measures (\"timestamp\" , measure) values ($1, $2);",
        "postgreSQLConfig": "181746e1a8504a56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1290,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9d5cbbc1900ce27b",
        "type": "inject",
        "z": "535e4b2995bd1b33",
        "name": "TTN Example",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"v3/prueb2@ttn/devices/eui-a8610a32371c7808/up\",\"payload\":{\"end_device_ids\":{\"device_id\":\"eui-a8610a32371c7808\",\"application_ids\":{\"application_id\":\"prueb2\"},\"dev_eui\":\"A8610A32371C7808\",\"join_eui\":\"0000000000000000\"},\"correlation_ids\":[\"as:up:01G66BW1J44F27MS63QAQV3TP5\",\"rpc:/ttn.lorawan.v3.AppAs/SimulateUplink:5dc72871-9ef1-4307-bca4-17a95f3b267b\"],\"received_at\":\"2022-06-23T18:47:52.644330252Z\",\"uplink_message\":{\"f_port\":2,\"frm_payload\":\"MQ==\",\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"test\"},\"rssi\":42,\"channel_rssi\":42,\"snr\":4.2}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7}}}},\"simulated\":true},\"qos\":0,\"retain\":false,\"_msgid\":\"a00adb4566ffb5fb\"}",
        "payloadType": "json",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "3df3e042989a44d4"
            ]
        ]
    },
    {
        "id": "e6c96e2c4cc1b946",
        "type": "change",
        "z": "535e4b2995bd1b33",
        "name": "Timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload.received_at",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "369edda658161204"
            ]
        ]
    },
    {
        "id": "369edda658161204",
        "type": "join",
        "z": "535e4b2995bd1b33",
        "name": "Exctracted Data",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1100,
        "y": 120,
        "wires": [
            [
                "6223ee1b5d01f10a"
            ]
        ]
    },
    {
        "id": "6223ee1b5d01f10a",
        "type": "function",
        "z": "535e4b2995bd1b33",
        "name": "Set Parameters",
        "func": "msg.params = [ msg.payload[0], msg.payload[1] ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 200,
        "wires": [
            [
                "852f8cc5a2901e7b",
                "7ea96d910b18bc8a",
                "a51b33186e4aea0d"
            ]
        ]
    },
    {
        "id": "bf9f56b0d129938c",
        "type": "ui_chart",
        "z": "535e4b2995bd1b33",
        "name": "",
        "group": "b62f3f727d91655d",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Line chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "0",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 900,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ba90024cabcf2913",
        "type": "postgresql",
        "z": "535e4b2995bd1b33",
        "name": "Select Last Scans",
        "query": "select m.measure, m.\"timestamp\" from (select * from measures\n\t\t\t\t\t\torder by id\n\t\t\t\t\t\tdesc limit 100) m\norder by m.id ASC",
        "postgreSQLConfig": "181746e1a8504a56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "78b27f3f00a1d5a9"
            ]
        ]
    },
    {
        "id": "78b27f3f00a1d5a9",
        "type": "function",
        "z": "535e4b2995bd1b33",
        "name": "Configure chart input",
        "func": "var query = msg.payload\nvar measures = []\nvar timestamps = []\nfor (var i=0; i < query.length; i++){\n    measures[i] = query[i]['measure']\n    timestamps[i] = query[i]['timestamp']\n}\nmsg.payload=[{\n    \"series\": [\"CO2 PPM\"],\n    \"data\": [ measures ],\n    \"labels\": timestamps\n}];\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 320,
        "wires": [
            [
                "bf9f56b0d129938c"
            ]
        ]
    },
    {
        "id": "3411f24a05bf4d74",
        "type": "inject",
        "z": "535e4b2995bd1b33",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "1843ad406cd0e098",
                "ba90024cabcf2913"
            ]
        ]
    },
    {
        "id": "1843ad406cd0e098",
        "type": "function",
        "z": "535e4b2995bd1b33",
        "name": "Synthetic measures",
        "func": "const payload = msg.payload\nvar time = payload/1000\n//var timeString = time.toTimeString()\nvar measure = Math.random() * 100\nmsg.params = [ time, measure ];\nmsg.payload = [ time, measure ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "7d87d6b216a2ec8c"
            ]
        ]
    },
    {
        "id": "7d87d6b216a2ec8c",
        "type": "postgresql",
        "z": "535e4b2995bd1b33",
        "name": "Insert synthetic",
        "query": "insert into measures (\"timestamp\" , measure) values (to_timestamp($1), $2);",
        "postgreSQLConfig": "181746e1a8504a56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 620,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "76a1f722f11f8949",
        "type": "json",
        "z": "f4eaed5e5b0f0b50",
        "name": "",
        "property": "temperature",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 60,
        "wires": [
            [
                "23cc1ac95541a147",
                "a0d31ec93d7fd2b4"
            ]
        ]
    },
    {
        "id": "9aa4e6548499b8db",
        "type": "inject",
        "z": "f4eaed5e5b0f0b50",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":{\"temperature\":90,\"temperature_c\":32.22222}}",
        "payloadType": "json",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "76a1f722f11f8949"
            ]
        ]
    },
    {
        "id": "fa242dcb1dfd0915",
        "type": "ui_gauge",
        "z": "f4eaed5e5b0f0b50",
        "d": true,
        "name": "",
        "group": "b62f3f727d91655d",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 690,
        "y": 120,
        "wires": []
    },
    {
        "id": "a0d31ec93d7fd2b4",
        "type": "change",
        "z": "f4eaed5e5b0f0b50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload.temperature_c",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "fa242dcb1dfd0915"
            ]
        ]
    },
    {
        "id": "519b2fb8348c287e",
        "type": "ui_gauge",
        "z": "f4eaed5e5b0f0b50",
        "d": true,
        "name": "",
        "group": "b62f3f727d91655d",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "23cc1ac95541a147",
        "type": "change",
        "z": "f4eaed5e5b0f0b50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload.temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "519b2fb8348c287e"
            ]
        ]
    }
]